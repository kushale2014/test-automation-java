package helper;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class EmailValidation {

    public static boolean validateEmailAddress(String email) {
        String regex1 = "^(.+)@(.+)$"; // проверяет только "@" - других условияй нет; и до и после знака может быть любое количество символов.
        String regex2 = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$"; // добавлена проверка символов AZaz09 подчеркивание (_), тире (-) и точка (.)  ; другие символы не допускаются
        String regex3 = "^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$"; // добавлены символы перед "@"

        // Позволяет и локальной части, и части имени домена иметь хотя бы одну точку.
        // Однако не допускает, чтобы две последовательные точки или эти точки появлялись в качестве начальных (или конечных) символов в локальной и доменной части адреса
        String regex4 = "^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^-]+(?:\\.[a-zA-Z0-9_!#$%&'*+/=?`{|}~^-]+)*@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$";

        // Гарантирует, чтобы часть имени домена содержит хотя бы одну точку.
        // Кроме того,условие проверяет, что часть имени домена после последней точки состоит только из букв.
        // Кроме того, гарантирует, что домен верхнего уровня (например, .com) состоит как минимум из двух-шести букв.
        String regex5 = "^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";

        String regex6 = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";

        Pattern p = Pattern.compile(regex6);
        Matcher m = p.matcher(email);
        return m.matches();
    }
}
